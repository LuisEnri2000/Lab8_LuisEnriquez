
import java.sql.PreparedStatement;
import java.util.Date;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Luis Enriquez
 */
public class mainFrame extends javax.swing.JFrame {

    /**
     * Creates new form mainFrame
     */
    public mainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jd_admin = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jd_cliente = new javax.swing.JDialog();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        label_saldo = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tf_user = new javax.swing.JTextField();
        pf_pass = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Cantidad", "Precio", "Caduca el", "ID"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Cuenta", "Password", "Identidad", "Saldo", "ID"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jButton2.setText("Agregar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Modificar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Eliminar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Actualizar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Agregar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Eliminar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Modificar");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Actualizar");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jd_adminLayout = new javax.swing.GroupLayout(jd_admin.getContentPane());
        jd_admin.getContentPane().setLayout(jd_adminLayout);
        jd_adminLayout.setHorizontalGroup(
            jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_adminLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jd_adminLayout.createSequentialGroup()
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(77, 77, 77)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2)
                    .addGroup(jd_adminLayout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(77, 77, 77)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(86, Short.MAX_VALUE))
        );
        jd_adminLayout.setVerticalGroup(
            jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_adminLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addGap(36, 36, 36)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton7)
                    .addComponent(jButton8)
                    .addComponent(jButton9))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Cantidad", "Precio", "Fecha", "ID"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        label_saldo.setText("Saldo disponible: L. ");

        jButton10.setText("Comprar");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Actualizar");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("Salir y facturar");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jd_clienteLayout = new javax.swing.GroupLayout(jd_cliente.getContentPane());
        jd_cliente.getContentPane().setLayout(jd_clienteLayout);
        jd_clienteLayout.setHorizontalGroup(
            jd_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_clienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jd_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jd_clienteLayout.createSequentialGroup()
                        .addGroup(jd_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton10)
                            .addComponent(label_saldo))
                        .addGap(42, 42, 42)
                        .addComponent(jButton11)
                        .addGap(33, 33, 33)
                        .addComponent(jButton12)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jd_clienteLayout.setVerticalGroup(
            jd_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_clienteLayout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(label_saldo)
                .addGap(44, 44, 44)
                .addGroup(jd_clienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton10)
                    .addComponent(jButton11)
                    .addComponent(jButton12))
                .addGap(70, 70, 70))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Impact", 0, 48)); // NOI18N
        jLabel1.setText("El Barrio");

        tf_user.setText("Die123");

        pf_pass.setText("321ied");

        jButton1.setText("Ingresar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pf_pass, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(tf_user, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(50, 50, 50)
                                    .addComponent(jLabel1)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(jButton1)))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(tf_user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pf_pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        boolean c = true, no = false;

        if (tf_user.getText().equals("Die123") && pf_pass.getText().equals("321ied")) {
            JOptionPane.showMessageDialog(this, "Correcto");
            c = false;
            jd_admin.setModal(true);
            jd_admin.pack();
            jd_admin.setVisible(true);
        }
        if (c) {
            dataBase db = new dataBase("./base1.accdb");
            db.conectar();
            try {
                db.query.execute("select Cuenta,Contra,ID,Saldo from tablaClientes");
                ResultSet rs = db.query.getResultSet();
                while (rs.next()) {
                    if(rs.getString(1).equals(tf_user.getText())) {
                        if (rs.getString(2).equals(pf_pass.getText())) {                           
                            JOptionPane.showMessageDialog(this, "Correcto");
                            id = rs.getInt(3);
                            saldo = rs.getDouble(4);
                            jd_cliente.setModal(true);
                            jd_cliente.pack();
                            jd_cliente.setVisible(true);
                            no = true;
                            ArrayList<String> factura = new ArrayList();
                            double total = 0;
                        }
                                              
                    }
                    
                    //jTable1.setModel(modelo);
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            db.desconectar();
        }
        
        if (c && !no) {
            JOptionPane.showMessageDialog(this, "Algo anda mal! Revisa los datos");
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // AGREGAR PRODUCTO
        dataBase db = new dataBase("./base1.accdb");
        db.conectar();
        try {
            int cant, id = 1;
            String nom, fec = "05/06/2019";
            double precio;
            Date fecha = new Date();

            db.query.execute("select Nombre,Cantidad,Precio,Fecha,ID from tablaProductos");
            ResultSet rs = db.query.getResultSet();
            while (rs.next()) {
                id++;
            }

            nom = JOptionPane.showInputDialog("Ingrese el nombre:");
            cant = Integer.parseInt(JOptionPane.showInputDialog("Cantidad de producto:"));
            precio = Double.parseDouble(JOptionPane.showInputDialog("Precio del producto:"));

            db.query.execute("INSERT INTO tablaProductos"
                    + " (Nombre,Cantidad,Precio,Fecha,ID)"
                    + " VALUES ('" + nom + "', '" + cant + "', '" + precio + "', '" + fec + "', '" + id + "')");

            db.commit();

            res = (DefaultTableModel) jTable1.getModel();
            res.setRowCount(0);
            jTable1.setModel(res);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        db.desconectar();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.setRowCount(0);
        dataBase db = new dataBase("./base1.accdb");
        db.conectar();
        try {
            db.query.execute("select Nombre,Cantidad,Precio,Fecha,ID from tablaProductos");
            ResultSet rs = db.query.getResultSet();
            while (rs.next()) {
                Object[] newrow = {rs.getString(1), rs.getInt(2), rs.getDouble(3), rs.getString(4), rs.getInt(5)};
                modelo.addRow(newrow);
                //jTable1.setModel(modelo);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        db.desconectar();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        //eliminar
        String nom = JOptionPane.showInputDialog("ID del producto a borrar:");

        dataBase db = new dataBase("./base1.accdb");
        db.conectar();
        try {
            db.query.execute("delete from tablaProductos where ID='" + nom + "'");
            db.commit();
            res = (DefaultTableModel) jTable1.getModel();
            res.setRowCount(0);
            jTable1.setModel(res);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        db.desconectar();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // Agregar clientes
        dataBase db = new dataBase("./base1.accdb");
        db.conectar();
        try {
            String Nom;
            String Cta;
            String pass;
            String Iden;
            double Sal;

            Nom = JOptionPane.showInputDialog("Ingrese el nombre:");
            Cta = JOptionPane.showInputDialog("Usuario:");
            pass = JOptionPane.showInputDialog("Contrasena:");
            Iden = JOptionPane.showInputDialog("Identidad (Numero):");
            Sal = Double.parseDouble(JOptionPane.showInputDialog("Saldo:"));

            db.query.execute("INSERT INTO tablaClientes"
                    + " (Nombre,Cuenta,Contra,Identidad,Saldo)"
                    + " VALUES ('" + Nom + "', '" + Cta + "', '" + pass + "', " + Iden + ", " + Sal + ")");

            db.commit();

            res = (DefaultTableModel) jTable2.getModel();
            res.setRowCount(0);
            jTable2.setModel(res);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        db.desconectar();

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // Actualizar clientes
        DefaultTableModel modelo = (DefaultTableModel) jTable2.getModel();
        modelo.setRowCount(0);
        dataBase db = new dataBase("./base1.accdb");
        db.conectar();
        try {
            db.query.execute("select Nombre,Cuenta,Contra,Identidad,Saldo,ID from tablaClientes");
            ResultSet rs = db.query.getResultSet();
            while (rs.next()) {
                Object[] newrow = {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getDouble(5), rs.getInt(6)};
                modelo.addRow(newrow);
                //jTable1.setModel(modelo);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        db.desconectar();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        //eliminar
        String nom = JOptionPane.showInputDialog("ID del cliente a borrar:");

        dataBase db = new dataBase("./base1.accdb");
        db.conectar();
        try {
            
            db.query.execute("delete from tablaClientes where ID='" + nom + "'");
            db.commit();
            res = (DefaultTableModel) jTable2.getModel();
            res.setRowCount(0);
            jTable2.setModel(res);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        catch(Exception e) {
            JOptionPane.showMessageDialog(this, "Hubo un error!");
        }
        db.desconectar();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // Actualizar tabla del cliente comprando
        
        DefaultTableModel modelo = (DefaultTableModel) jTable3.getModel();
        modelo.setRowCount(0);
        
        
        
        dataBase db = new dataBase("./base1.accdb");
        db.conectar();
        try {
            
            label_saldo.setText("Saldo disponible: " + saldo);
            
            
            db.query.execute("select Nombre,Cantidad,Precio,Fecha,ID from tablaProductos");
            ResultSet rs = db.query.getResultSet();
            while (rs.next()) {
                Object[] newrow = {rs.getString(1), rs.getInt(2), rs.getDouble(3), rs.getString(4), rs.getInt(5)};
                modelo.addRow(newrow);
                //jTable1.setModel(modelo);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        db.desconectar();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        dataBase db = new dataBase("./base1.accdb");
        
        int cod = Integer.parseInt(JOptionPane.showInputDialog(this, "Codigo a comprar:"));
        double precio = 0;
        int ide = 0, cant = 1;
        String nombre = "";
        boolean encontrado = false;
        
        db.conectar();
        try {
            
            label_saldo.setText("Saldo disponible: " + saldo);
            
            
            db.query.execute("select Nombre,Cantidad,Precio,ID from tablaProductos");
            ResultSet rs = db.query.getResultSet();
            while (rs.next()) {
                if (rs.getInt(4) == cod) {
                    nombre = rs.getString(1);
                    cant = rs.getInt(2);
                    precio = rs.getDouble(3);
                    ide = rs.getInt(4);
                    encontrado = true;
                   
                }       
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        
        
        
        if (encontrado) {
            try {
                if (saldo >= precio) {
                    db.query.execute("update tablaClientes set Saldo='" + (saldo - precio) + "' where ID=" + id);
                    db.query.execute("update tablaProductos set Cantidad='" + (cant - 1) + "' where ID=" + ide);
                    factura.add(nombre + " ......... L." + precio);
                    total += precio;
                    saldo -= precio;
                    JOptionPane.showMessageDialog(this, "Compra de "+nombre+" con exito!");
                }else{
                    JOptionPane.showMessageDialog(this, "No tiene saldo suficiente");
                }
                db.commit();
                res = (DefaultTableModel) jTable3.getModel();
                res.setRowCount(0);
                jTable3.setModel(res);
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }else{
            JOptionPane.showMessageDialog(this, "No encontre ese ID!");
        }
        db.desconectar();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        // IMPRIMIR FACTURA
        System.out.println("FACTURA");
        System.out.println("=======================================");
        for (int i = 0; i < factura.size(); i++) {
            System.out.println(factura.get(i));
        }
        System.out.println("Subtotal: " + total);
        System.out.println("Total: " + (total + (total*0.15)));
        System.out.println("=======================================");
        
        jd_cliente.setVisible(false);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int cod = Integer.parseInt(JOptionPane.showInputDialog(this, "Codigo a modificar: "));
        boolean found = false;
        
        dataBase db = new dataBase("./base1.accdb");
        double precio = 0;
        int ide = 0, cant = 1;
        String nombre = "";
        int op = 0;
        
        db.conectar();
        try {
            db.query.execute("select Nombre,Cantidad,Precio,ID from tablaProductos");
            ResultSet rs = db.query.getResultSet();
            while (rs.next()) {
                if (rs.getInt(4) == cod) {
                    found = true;
                    ide = rs.getInt(4);
                    
                    
                    op = Integer.parseInt(JOptionPane.showInputDialog(this, "Opcion: "
                            + "\n1. Nombre"
                            + "\n2. Cantidad"
                            + "\n3. Precio"));
                    nombre = JOptionPane.showInputDialog(this, "Nuevo:");
                }  
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
                
        try {
            if (op == 1) 
                db.query.execute("update tablaProductos set Nombre='" + nombre + "' where ID=" + ide);
            if (op == 2)
                db.query.execute("update tablaProductos set Cantidad='" + (Integer.parseInt(nombre)) + "' where ID=" + ide);
            if (op == 3)
                db.query.execute("update tablaProductos set Precio='" + (Double.parseDouble(nombre)) + "' where ID=" + ide);
                
            db.commit();
            
            res= (DefaultTableModel)jTable1.getModel();
            res.setRowCount(0);
            jTable1.setModel(res);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        db.desconectar();
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        int cod = Integer.parseInt(JOptionPane.showInputDialog(this, "Codigo a modificar: "));
        boolean found = false;
        
        dataBase db = new dataBase("./base1.accdb");
        int op = 0;
        int ide= 0;
        String nombre = "";
        
        db.conectar();
        try {
            db.query.execute("select ID from tablaClientes");
            ResultSet rs = db.query.getResultSet();
            while (rs.next()) {
                if (rs.getInt(1) == cod) {
                    found = true;
                    ide = rs.getInt(1);
                    
                    
                    op = Integer.parseInt(JOptionPane.showInputDialog(this, "Opcion: "
                            + "\n1. Nombre"
                            + "\n2. Cuenta"
                            + "\n3. Password"
                            + "\n4. Identidad"
                            + "\n5. Saldo"));
                    nombre = JOptionPane.showInputDialog(this, "Nuevo:");
                }  
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
                
        try {
            if (op == 1) 
                db.query.execute("update tablaClientes set Nombre='" + nombre + "' where ID=" + ide);
            if (op == 2)
                db.query.execute("update tablaClientes set Cuenta='" + nombre + "' where ID=" + ide);
            if (op == 3)
                db.query.execute("update tablaClientes set Contra='" + nombre + "' where ID=" + ide);
            if (op == 4)
                db.query.execute("update tablaClientes set Identidad='" + (Integer.parseInt(nombre)) + "' where ID=" + ide);
            if (op == 5)
                db.query.execute("update tablaClientes set Saldo='" + (Double.parseDouble(nombre)) + "' where ID=" + ide);
            
                
            db.commit();
            res= (DefaultTableModel)jTable2.getModel();
            res.setRowCount(0);
            jTable2.setModel(res);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        db.desconectar();
    }//GEN-LAST:event_jButton8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JDialog jd_admin;
    private javax.swing.JDialog jd_cliente;
    private javax.swing.JLabel label_saldo;
    private javax.swing.JPasswordField pf_pass;
    private javax.swing.JTextField tf_user;
    // End of variables declaration//GEN-END:variables

    DefaultTableModel res;
    int id; double saldo;
    public ArrayList<String> factura = new ArrayList();
    public double total = 0;
}
